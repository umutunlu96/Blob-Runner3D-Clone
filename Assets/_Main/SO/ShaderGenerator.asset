%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3acd6fe57257048db802c1c4c2b75248, type: 3}
  m_Name: ShaderGenerator
  m_EditorClassIdentifier: 
  shaderName: TransformProvider
  shaderReference: {fileID: 4800000, guid: d36b7ffba7b1e4d39b4e60e89ae1f03d, type: 3}
  shaderTemplate: uRaymarching/Forward/Standard
  variables:
  - key: Name
    value: TransformProvider
  - key: ObjectShape
    value: CUBE
  - key: RaymarchingShaderDirectory
    value: Assets\uRaymarching\Shaders\Include\Legacy
  - key: RenderType
    value: Opaque
  - key: RenderQueue
    value: Geometry
  conditions:
  - key: ShadowCaster
    value: 1
  - key: FullScreen
    value: 0
  - key: WorldSpace
    value: 1
  - key: FollowObjectScale
    value: 0
  - key: CameraInsideObject
    value: 0
  - key: UseRaymarchingDepth
    value: 1
  - key: FallbackToDiffuse
    value: 1
  - key: Blend
    value: 0
  - key: UseCameraDepthTexture
    value: 0
  - key: DisableViewCulling
    value: 0
  - key: SphericalHarmonicsPerPixel
    value: 1
  - key: ForwardAdd
    value: 1
  - key: FallbackToStandardShader
    value: 0
  - key: UseGrabPass
    value: 0
  blocks:
  - key: Properties
    value: "[Header(Additional Parameters)]\r\n\r\n[Header(Float Parameters)]\r\n_Smooth(\"Smooth\",
      float) = 17.5\r\n    \r\n[Header(Color Parameters)]\r\n_HeadColor(\"Head Color\",
      Color) = (1.0, 1.0, 1.0, 1.0)\r\n_TorsoColor(\"TorsoColor Color\", Color) =
      (1.0, 1.0, 1.0, 1.0)\r\n_LeftArmColor(\"LeftArmColor Color\", Color) = (1.0,
      1.0, 1.0, 1.0)\r\n_RightArmColor(\"RightArmColor Color\", Color) = (1.0, 1.0,
      1.0, 1.0)\r\n_LeftLegColor(\"LeftLegColor Color\", Color) = (1.0, 1.0, 1.0,
      1.0)\r\n_RightLegColor(\"RightLegColor Color\", Color) = (1.0, 1.0, 1.0, 1.0)\r"
    folded: 0
  - key: DistanceFunction
    value: "// These inverse transform matrices are provided\r\n// from TransformProvider
      script\r\nfloat4x4 _Head;\r\nfloat4x4 _TorsoUpper;\r\nfloat4x4 _TorsoMid;\r\nfloat4x4
      _TorsoLower;\r\nfloat4x4 _TorsoMidExtra;\r\nfloat4x4 _LeftArmUpper;\r\nfloat4x4
      _LeftArmMid;\r\nfloat4x4 _LeftArmLower;\r\nfloat4x4 _RightArmUpper;\r\nfloat4x4
      _RightArmMid;\r\nfloat4x4 _RightArmLower;\r\nfloat4x4 _LeftLegUpper;\r\nfloat4x4
      _LeftLegLower;\r\nfloat4x4 _LeftLegMid;\r\nfloat4x4 _RightLegUpper;\r\nfloat4x4
      _RightLegLower;\r\nfloat4x4 _RightLegMid;\r\n\r\nfloat _Smooth;\r\n\r\n// Global
      Variables\r\n\r\n    float4 headPos;\r\n    float4 torsoUpperPos;\r\n    float4
      torsoMidPos;\r\n    float4 torsoLowerPos;\r\n    float4 torsoMidExtraPos;\r\n   
      float4 leftArmUpperPos; \r\n    float4 leftArmMidPos;\r\n    float4 leftArmLowerPos;\r\n   
      float4 rightArmUpperPos;\r\n    float4 rightArmMidPos;\r\n    float4 rightArmLowerPos;\r\n   
      float4 leftLegUpperPos; \r\n    float4 leftLegLowerPos; \r\n    float4 leftLegMidPos;\r\n   
      float4 rightLegUpperPos;\r\n    float4 rightLegLowerPos;\r\n    float4 rightLegMidPos;\r\n\r\n   
      float head;\r\n    float torsoUpper;\r\n    float torsoMid;\r\n    float torsoLower;
      \r\n    float torsoMidExtra;\r\n    \r\n    float leftArmUpper; \r\n    float
      leftArmMid; \r\n    float leftArmLower;\r\n    \r\n    float rightArmUpper;\r\n   
      float rightArmMid;\r\n    float rightArmLower;\r\n    \r\n    float leftLegUpper;\r\n   
      float leftLegLower;\r\n    float leftLegMid;\r\n    \r\n    float rightLegUpper;\r\n   
      float rightLegLower;\r\n    float rightLegMid;\r\n\r\n    float result1 ;\r\n   
      float result2 ;\r\n    float result3 ;\r\n    float result4 ;\r\n    float
      result5 ;\r\n    float result6 ;\r\n    float result7 ;\r\n    float result8
      ;\r\n    float result9 ;\r\n    float result10;\r\n    float result11;\r\n   
      float result12;\r\n    float result13;\r\n    float result14;\r\n    float
      result15;\r\n\r\ninline float DistanceFunction(float3 wpos)\r\n{\r\n    headPos
      = mul(_Head, float4(wpos, 1.0));\r\n    torsoUpperPos = mul(_TorsoUpper, float4(wpos,
      1.0));\r\n    torsoMidPos = mul(_TorsoMid, float4(wpos, 1.0));\r\n    torsoLowerPos
      = mul(_TorsoLower, float4(wpos, 1.0));\r\n    torsoMidExtraPos = mul(_TorsoMidExtra,
      float4(wpos, 1.0));\r\n    leftArmUpperPos = mul(_LeftArmUpper, float4(wpos,
      1.0));\r\n    leftArmMidPos = mul(_LeftArmMid, float4(wpos, 1.0));\r\n    leftArmLowerPos
      = mul(_LeftArmLower, float4(wpos, 1.0));\r\n    rightArmUpperPos = mul(_RightArmUpper,
      float4(wpos, 1.0));\r\n    rightArmMidPos = mul(_RightArmMid, float4(wpos,
      1.0));\r\n    rightArmLowerPos = mul(_RightArmLower, float4(wpos, 1.0));\r\n   
      leftLegUpperPos = mul(_LeftLegUpper, float4(wpos, 1.0));\r\n    leftLegLowerPos
      = mul(_LeftLegLower, float4(wpos, 1.0));\r\n    leftLegMidPos = mul(_LeftLegMid,
      float4(wpos, 1.0));\r\n    rightLegUpperPos = mul(_RightLegUpper, float4(wpos,
      1.0));\r\n    rightLegLowerPos = mul(_RightLegLower, float4(wpos, 1.0));\r\n   
      rightLegMidPos = mul(_RightLegMid, float4(wpos, 1.0));\r\n\r\n    head = Sphere(headPos,
      0.1F);\r\n    torsoUpper = Capsule(torsoUpperPos, float3(0, 0, 0), float3(0,
      .15, 0), 0.125F);\r\n    torsoMid = Sphere(torsoMidPos, 0.125F);\r\n    torsoLower
      = Sphere(torsoLowerPos, 0.16F);\r\n    torsoMidExtra =  Sphere(torsoMidExtraPos,
      0.16F);\r\n    \r\n    leftArmUpper = Capsule(leftArmUpperPos, float3(0, 0,
      0), float3(0, .15, 0), 0.075F);\r\n    leftArmMid =  Sphere(leftArmMidPos,
      0.04F);\r\n    leftArmLower = Capsule(leftArmLowerPos, float3(0, 0, 0), float3(0,
      .15, 0), 0.05F);\r\n    \r\n    rightArmUpper = Capsule(rightArmUpperPos, float3(0,
      0, 0), float3(0, .15, 0), 0.075F);\r\n    rightArmMid =  Sphere(rightArmMidPos,
      0.045F);\r\n    rightArmLower = Capsule(rightArmLowerPos, float3(0, 0, 0),
      float3(0, .15, 0), 0.05F);\r\n    \r\n    leftLegUpper = Capsule(leftLegUpperPos,
      float3(0, 0, 0), float3(0, .125, 0), 0.07F);\r\n    leftLegLower = Capsule(leftLegLowerPos,
      float3(0, 0, 0), float3(0, .125, 0), 0.07F);\r\n    leftLegMid =  Sphere(leftLegMidPos,
      0.075F);\r\n    \r\n    rightLegUpper = Capsule(rightLegUpperPos, float3(0,
      0, 0), float3(0, .125, 0), 0.07F);\r\n    rightLegLower = Capsule(rightLegLowerPos,
      float3(0, 0, 0), float3(0, .125, 0), 0.07F);\r\n    rightLegMid =  Sphere(rightLegMidPos,
      0.06F);\r\n\r\n    result1 = SmoothMin(torsoUpper, torsoLower, _Smooth);\r\n   
      result2 = SmoothMin(leftArmUpper, leftArmLower, _Smooth);\r\n    result3 =
      SmoothMin(rightArmUpper, rightArmLower, _Smooth);\r\n    result4 = SmoothMin(leftLegUpper,
      leftLegLower, _Smooth);\r\n    result5 = SmoothMin(rightLegUpper, rightLegLower,
      _Smooth);\r\n    result6 = SmoothMin(head, torsoMid, _Smooth);\r\n    result7
      = SmoothMin(leftArmMid, rightArmMid, _Smooth);\r\n    result8 = SmoothMin(leftLegMid,
      rightLegMid, _Smooth);\r\n    \r\n    result9 = SmoothMin(result1, torsoMidExtra,
      _Smooth);\r\n    result10 = SmoothMin(result2, result3, _Smooth);\r\n    result11
      = SmoothMin(result4, result5, _Smooth);\r\n    result12 = SmoothMin(result6,
      result7, _Smooth);\r\n    \r\n    result13 = SmoothMin(result8, result9, _Smooth);\r\n   
      result14 = SmoothMin(result10, result11, _Smooth);\r\n    \r\n    result15
      = SmoothMin(result12, result13, _Smooth);\r\n    \r\n    return SmoothMin(result14,
      result15, _Smooth);\r\n}\r"
    folded: 0
  - key: PostEffect
    value: "float4 _HeadColor;\r\nfloat4 _TorsoColor;\r\nfloat4 _LeftArmColor;\r\nfloat4
      _RightArmColor;\r\nfloat4 _LeftLegColor;\r\nfloat4 _RightLegColor;\r\n\r\nfloat4
      result1_Color;\r\nfloat4 result2_Color;\r\nfloat4 result3_Color;\r\nfloat4
      result4_Color;\r\nfloat4 result5_Color;\r\n\r\ninline void PostEffect(RaymarchInfo
      ray, inout PostEffectOutput o)\r\n{\r\n    result1_Color = float4(4.0 / head,
      4.0 / torsoUpper, 4.0 / torsoMid, 4.0 / torsoLower);\r\n    result2_Color =
      float4(4.0 / torsoMidExtra, 4.0 / leftArmUpper, 4.0 / leftArmMid, 4.0 / leftArmLower);\r\n   
      result3_Color = float4(4.0 / rightArmUpper, 4.0 / rightArmMid, 4.0 / rightArmLower,
      4.0 / leftLegUpper);\r\n    result4_Color = float4(4.0 / leftLegLower, 4.0
      / leftLegMid, 4.0 / rightLegUpper, 4.0 / rightLegLower);\r\n    result5_Color
      = float4(4.0 / rightLegMid, 0, 0, 0);\r\n\r\n    fixed3 computeAlbedoPart1
      =\r\n        result1_Color.x * _HeadColor +\r\n        result1_Color.y * _TorsoColor
      +\r\n        result1_Color.z * _TorsoColor +\r\n        result1_Color.w * _TorsoColor;\r\n\r\n   
      fixed3 computeAlbedoPart2 =\r\n        result2_Color.x * _TorsoColor +\r\n       
      result2_Color.y * _LeftArmColor +\r\n        result2_Color.z * _LeftArmColor
      +\r\n        result2_Color.w * _LeftArmColor;\r\n\r\n    fixed3 computeAlbedoPart3
      =\r\n        result3_Color.x * _RightArmColor +\r\n        result3_Color.y
      * _RightArmColor +\r\n        result3_Color.z * _RightArmColor +\r\n       
      result3_Color.w * _LeftLegColor;\r\n\r\n    fixed3 computeAlbedoPart4 =\r\n       
      result4_Color.x * _LeftLegColor +\r\n        result4_Color.y * _LeftLegColor
      +\r\n        result4_Color.z * _RightLegColor +\r\n        result4_Color.w
      * _RightLegColor;\r\n\r\n    fixed3 computeAlbedoPart5 =\r\n        result5_Color.x
      * _RightLegColor;\r\n\r\n    fixed3 final = normalize(fixed3(\r\n        computeAlbedoPart1
      +\r\n        computeAlbedoPart2 +\r\n        computeAlbedoPart3 +\r\n       
      computeAlbedoPart4 +\r\n        computeAlbedoPart5));\r\n\r\n    o.Albedo =
      final;\r\n}\r"
    folded: 0
  constants: {fileID: 11400000, guid: 9c8b2f5a7a56c4e21bee7ca4ccfc6640, type: 2}
  basicFolded: 1
  conditionsFolded: 0
  variablesFolded: 0
  materialsFolded: 1
  constantsFolded: 0
