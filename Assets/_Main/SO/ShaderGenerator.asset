%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3acd6fe57257048db802c1c4c2b75248, type: 3}
  m_Name: ShaderGenerator
  m_EditorClassIdentifier: 
  shaderName: TransformProvider
  shaderReference: {fileID: 4800000, guid: d36b7ffba7b1e4d39b4e60e89ae1f03d, type: 3}
  shaderTemplate: uRaymarching/Forward/Standard
  variables:
  - key: Name
    value: TransformProvider
  - key: ObjectShape
    value: CUBE
  - key: RaymarchingShaderDirectory
    value: Assets\uRaymarching\Shaders\Include\Legacy
  - key: RenderType
    value: Opaque
  - key: RenderQueue
    value: Geometry
  conditions:
  - key: ShadowCaster
    value: 1
  - key: FullScreen
    value: 0
  - key: WorldSpace
    value: 1
  - key: FollowObjectScale
    value: 0
  - key: CameraInsideObject
    value: 0
  - key: UseRaymarchingDepth
    value: 1
  - key: FallbackToDiffuse
    value: 1
  - key: Blend
    value: 0
  - key: UseCameraDepthTexture
    value: 0
  - key: DisableViewCulling
    value: 0
  - key: SphericalHarmonicsPerPixel
    value: 1
  - key: ForwardAdd
    value: 1
  - key: FallbackToStandardShader
    value: 0
  - key: UseGrabPass
    value: 0
  blocks:
  - key: Properties
    value: "[Header(Additional Parameters)]\r\n\r\n[Header(Float Parameters)]\r\n_Smooth(\"Smooth\",
      float) = 17.5\r\n_HeadScale (\"HeadScale\", float) = 0.1   \r\n_TorsoUpperScale
      (\"TorsoUpperScale\", float) = 0.1   \r\n_TorsoLowerScale (\"TorsoLowerScale\",
      float) = 0.1   \r\n_LeftArmUpperScale (\"LeftArmUpperScale\", float) = 0.1  
      \r\n_LeftArmLowerScale (\"LeftArmLowerScale\", float) = 0.1   \r\n\n[Header(Color
      Parameters)]\r\n_HeadColor(\"Head Color\", Color) = (1.0, 1.0, 1.0, 1.0)\r\n_TorsoUpperColor(\"TorsoUpper
      Color\", Color) = (1.0, 1.0, 1.0, 1.0)\r\n_TorsoLowerColor(\"TorsoLower Color\",
      Color) = (1.0, 1.0, 1.0, 1.0)\r\n_LeftArmUpperColor(\"LeftArmUpper Color\",
      Color) = (1.0, 1.0, 1.0, 1.0)\r\n_LeftArmLowerColor(\"LeftArmLower Color\",
      Color) = (1.0, 1.0, 1.0, 1.0)\r"
    folded: 0
  - key: DistanceFunction
    value: "// These inverse transform matrices are provided\r\n// from TransformProvider
      script\r\nfloat4x4 _Head;\r\nfloat4x4 _TorsoUpper;\r\nfloat4x4 _TorsoLower;\r\nfloat4x4
      _LeftArmUpper;\r\nfloat4x4 _LeftArmLower;\r\n\nfloat _Smooth;\r\nfloat _HeadScale;\r\nfloat
      _TorsoUpperScale;\r\nfloat _TorsoLowerScale;\r\nfloat _LeftArmUpperScale; \r\nfloat
      _LeftArmLowerScale; \r\n\r\ninline float DistanceFunction(float3 wpos)\r\n{\r\n   
      float4 headPos = mul(_Head, float4(wpos, 1.0));\r\n    float4 torsoUpperPos
      = mul(_TorsoUpper, float4(wpos, 1.0));\r\n    float4 torsoLowerPos = mul(_TorsoLower,
      float4(wpos, 1.0));\r\n    float4 leftArmUpperPos = mul(_LeftArmUpper, float4(wpos,
      1.0));\r\n    float4 leftArmLowerPos = mul(_LeftArmLower, float4(wpos, 1.0));\r\n\r\n   
      float head = Sphere(headPos, _HeadScale);\r\n    float torsoUpper = Capsule(torsoUpperPos,
      float3(0, 0, 0), float3(0, .15, 0), _TorsoUpperScale);\r\n    float torsoLower
      = Sphere(torsoLowerPos, _TorsoLowerScale);\r\n    \n    float leftArmUpper
      = Capsule(leftArmUpperPos, float3(0, 0, 0), float3(0, .15, 0), _LeftArmUpperScale);\r\n   
      float leftArmLower = Capsule(leftArmLowerPos, float3(0, 0, 0), float3(0, .15,
      0), _LeftArmLowerScale);\r\n\n    float result1 = SmoothMin(torsoUpper, torsoLower,
      _Smooth);\r\n    float result2 = SmoothMin(leftArmUpper, leftArmLower, _Smooth);\r\n   
      float result3 = SmoothMin(result1, result2, _Smooth);\r\n    \r\n    return
      SmoothMin(head, result3, _Smooth);\r\n}\r"
    folded: 0
  - key: PostEffect
    value: "float4 _HeadColor;\r\nfloat4 _TorsoUpperColor;\r\nfloat4 _TorsoLowerColor;\r\nfloat4
      _LeftArmUpperColor;\r\nfloat4 _LeftArmLowerColor;\r\n\r\ninline void PostEffect(RaymarchInfo
      ray, inout PostEffectOutput o)\r\n{\r\n    float3 wpos = ray.endPos;\r\n   
      float4 headPos = mul(_Head, float4(wpos, 1.0));\r\n    float4 torsoUpperPos
      = mul(_TorsoUpper, float4(wpos, 1.0));\r\n    float4 torsoLowerPos = mul(_TorsoLower,
      float4(wpos, 1.0));\r\n    float4 leftArmUpperPos = mul(_LeftArmUpper, float4(wpos,
      1.0));\r\n    float4 leftArmLowerPos = mul(_LeftArmLower, float4(wpos, 1.0));\r\n\r\n   
      float head = Sphere(headPos, _HeadScale);\r\n    float torsoUpper = Capsule(torsoUpperPos,
      float3(0, 0, 0), float3(0, .15, 0), _TorsoUpperScale);\r\n    float torsoLower
      = Sphere(torsoLowerPos, _TorsoLowerScale);\r\n    float leftArmUpper = Capsule(leftArmUpperPos,
      float3(0, 0, 0), float3(0, .15, 0), _LeftArmUpperScale);\r\n    float leftArmLower
      = Capsule(leftArmLowerPos, float3(0, 0, 0), float3(0, .15, 0), _LeftArmLowerScale);\r\n\r\n   
      float4 result1 = float4(2.0 / head, 2.0 / torsoUpper, 2.0 / torsoLower, 2.0
      / leftArmUpper);\r\n    float4 result2 = float4(2.0 / leftArmLower, 0, 0, 0);\r\n\r\n   
      fixed3 computeAlbedoPart1 =\r\n        result1.x * _HeadColor +\r\n       
      result1.y * _TorsoUpperColor +\r\n        result1.z * _TorsoLowerColor +\r\n       
      result1.w * _LeftArmUpperColor;\r\n\r\n    fixed3 computeAlbedoPart2 =\r\n       
      result2.x * _LeftArmLowerColor;\r\n\n    fixed3 final = normalize(fixed3(\r\n       
      computeAlbedoPart1 +\r\n        computeAlbedoPart2));\r\n\r\n    o.Albedo =
      final;\r\n}\r"
    folded: 0
  constants: {fileID: 11400000, guid: 9c8b2f5a7a56c4e21bee7ca4ccfc6640, type: 2}
  basicFolded: 0
  conditionsFolded: 0
  variablesFolded: 0
  materialsFolded: 0
  constantsFolded: 0
